plugins {
    id 'com.android.application'
    id 'maven-publish'
}

android {
    compileSdkVersion rootProject.sampleCompileSdkVersion

    packagingOptions {
        // Exclude file to avoid
        // Error: Duplicate files during packaging of APK
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/*.kotlin_module'
    }

    defaultConfig {
        applicationId "com.urbanairship.sample"
        minSdkVersion 21
        targetSdkVersion rootProject.sampleTargetSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding = true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    lint {
        abortOnError false
        disable 'MissingTranslation', 'AppCompatResource'
    }
    namespace 'com.urbanairship.sample'
}

dependencies {
    implementation "androidx.appcompat:appcompat:$rootProject.androidxAppCompatVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "androidx.preference:preference:$rootProject.androidxPreferenceVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$rootProject.androidxLifeCycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.androidxLifeCycleVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.androidxConstraintLayoutVersion"
    implementation "androidx.navigation:navigation-fragment:$rootProject.androidxNavigationVersion"
    implementation "androidx.navigation:navigation-ui:$rootProject.androidxNavigationVersion"

    // Airship ADM
    implementation project(':urbanairship-adm')

    // Airship FCM
    implementation project(':urbanairship-fcm')

    // Airship Advertising ID tracking
    implementation project(':urbanairship-ads-identifier')

    // Airship Preferences
    implementation project(':urbanairship-preference')

    // Airship Message Center
    implementation project(':urbanairship-message-center')

    // Airship Automation (In-App)
    implementation project(':urbanairship-automation')

    // Airship location
    implementation project(':urbanairship-location')
    // Allows Airship location services to use Fused Location
    implementation "com.google.android.gms:play-services-location:$rootProject.playServicesLocationVersion"

    // Airship Chat
    implementation project(':urbanairship-chat')

    // Testing-only dependencies
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.androidxEspressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.androidxEspressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-web:$rootProject.androidxEspressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.androidxEspressoVersion"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$rootProject.androidxEspressoVersion"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$rootProject.androidxTestRunnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.androidxTestRulesVersion"
    androidTestImplementation "androidx.test:core:$rootProject.androidxTestCoreVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.androidxTestJunitVersion"

    // Assertions
    androidTestImplementation "androidx.test.ext:truth:$rootProject.androidxTestTruthVersion"
    androidTestImplementation "com.google.truth:truth:$rootProject.googleTruthVersion"

    implementation 'com.google.android.gms:play-services-instantapps:18.0.1'
    // Instrumentation Tests

    testImplementation "org.robolectric:robolectric:$rootProject.robolectricVersion"
    androidTestImplementation "androidx.navigation:navigation-testing:$rootProject.androidxNavigationVersion"

    debugImplementation "androidx.fragment:fragment-testing:$rootProject.androidxFragmentVersion"
    androidTestImplementation "androidx.test:core:$rootProject.androidxTestCoreVersion"
    androidTestImplementation "androidx.test:runner:$rootProject.androidxTestRunnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.androidxTestRulesVersion"


    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.androidxEspressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.androidxEspressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.androidxEspressoVersion"

    androidTestImplementation "androidx.test.ext:junit:$rootProject.androidxTestJunitVersion"
    androidTestImplementation "androidx.test.ext:truth:$rootProject.androidxTestTruthVersion"
    androidTestImplementation "com.google.truth:truth:$rootProject.googleTruthVersion"

    androidTestImplementation "org.robolectric:annotations:$rootProject.robolectricVersion"

    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockitoVersion"
}


def googleServicesFile = rootProject.file('sample/google-services.json')
if (googleServicesFile.exists()) {
    apply plugin: 'com.google.gms.google-services'  // Google Play services Gradle plugin
}
