import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'airship-module'
    id 'kotlin-android'
    id 'kotlin-allopen'
}

description = "Airship Preference Center extension."

airshipModule {
    published = true
}

android {
    defaultConfig {
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        // Android Studio isn't a fan of shared srcDirs, so we'll only set up headless
        // instrumentation testing if running from CLI/CI to prevent "Duplicate content root"
        // warnings. When running via Android Studio, we'll only add sharedTest to the
        // androidTest sourceSets so instrumentation can still be run normally.
        if (!System.getProperties().containsKey('idea.active')) {
            testDebug.java.srcDirs += 'src/sharedTestDebug/java'
            androidTestDebug.java.srcDirs += 'src/sharedTestDebug/java'
        } else {
            androidTestDebug.java.srcDirs += 'src/sharedTestDebug/java'
        }
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    namespace 'com.urbanairship.preferencecenter'
}

tasks.withType(KotlinCompile).configureEach {
    it.kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs += [ "-Xopt-in=kotlin.RequiresOptIn" ]
    }
}

allOpen {
    annotation "com.urbanairship.preferencecenter.testing.OpenForTesting"
}

dependencies {
    api project(':urbanairship-core')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$rootProject.kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.kotlinCoroutinesVersion"

    // AndroidX
    implementation "androidx.core:core:$rootProject.androidxCoreVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.androidxConstraintLayoutVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.androidxLifeCycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.androidxLifeCycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.androidxLifeCycleVersion"

    // Support libraries
    implementation "androidx.appcompat:appcompat:$rootProject.androidxAppCompatVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"

    // Tests (Shared)

    // debugImplementation is used here so that the empty Activity that FragmentScenario relies on
    // is accessible by the target test process.
    debugImplementation "androidx.test:core:$rootProject.androidxTestCoreVersion"
    debugImplementation "androidx.fragment:fragment-testing:$rootProject.androidxFragmentVersion"

    // Unit Tests
    testImplementation project(':urbanairship-test')
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "androidx.test:core:$rootProject.androidxTestCoreVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "org.robolectric:robolectric:$rootProject.robolectricVersion"
    testImplementation "androidx.test.ext:junit:$rootProject.androidxTestJunitVersion"
    testImplementation "androidx.test.espresso:espresso-core:$rootProject.androidxEspressoVersion"
    testImplementation "androidx.test.espresso:espresso-contrib:$rootProject.androidxEspressoVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.kotlinxCorutinesTest"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$rootProject.mockitoKotlinVersion"
    testImplementation "com.google.truth:truth:$rootProject.googleTruthVersion"
    testImplementation "androidx.test.ext:truth:$rootProject.androidxTestTruthVersion"
    testImplementation "app.cash.turbine:turbine:$rootProject.turbineVersion"

    // Instrumentation Tests
    androidTestImplementation "androidx.test:core:$rootProject.androidxTestCoreVersion"
    androidTestImplementation "androidx.test:runner:$rootProject.androidxTestRunnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.androidxTestRulesVersion"

    androidTestImplementation ("org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.kotlinxCorutinesTest"){
        // https://github.com/Kotlin/kotlinx.coroutines/issues/2023
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.androidxEspressoVersion"
    androidTestImplementation("androidx.test.espresso:espresso-contrib:$rootProject.androidxEspressoVersion"){
        // https://github.com/android/android-test/issues/861
        exclude group: 'org.checkerframework', module: 'checker'
    }
    androidTestImplementation "androidx.test.espresso:espresso-intents:$rootProject.androidxEspressoVersion"

    androidTestImplementation "androidx.test.ext:junit:$rootProject.androidxTestJunitVersion"
    androidTestImplementation "androidx.test.ext:truth:$rootProject.androidxTestTruthVersion"
    androidTestImplementation "com.google.truth:truth:$rootProject.googleTruthVersion"

    androidTestImplementation "org.robolectric:annotations:$rootProject.robolectricVersion"

    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestImplementation "org.mockito:mockito-android:$rootProject.mockitoVersion"
    androidTestImplementation "org.mockito.kotlin:mockito-kotlin:$rootProject.mockitoKotlinVersion"
}



afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {

                groupId = 'com.urbanairship.android'
                artifactId = project.name
                version = project.version.toString()



                pom {
                    name.set(project.name)
                    description.set(project.description)
                    url.set("https://github.com/urbanairship/android-library")

                    developers {
                        developer { name.set("Airship") }
                    }

                    licenses {
                        license {
                            name.set("The Apache Software License, Version 2.0")
                            url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                            distribution.set("repo")
                        }
                    }

                    scm {
                        connection.set("https://github.com/urbanairship/android-library.git")
                        url.set("https://github.com/urbanairship/android-library")
                    }
                }

            }
        }
    }
}